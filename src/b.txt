; ModuleID = 'moudle'
source_filename = "moudle"

define i32 @f(i32 %0) {
fEntry:
  %FunctionScope_f_i_Pointer = alloca i32, align 4
  store i32 %0, i32* %FunctionScope_f_i_Pointer, align 4
  %1 = load i32, i32* %FunctionScope_f_i_Pointer, align 4
  ret i32 %1
}

define void @g() {
gEntry:
  %FunctionScope_g_j = alloca i32, align 4
  store i32 6, i32* %FunctionScope_g_j, align 4
  ret void
}

define void @func() {
funcEntry:
  ret void
}

define i32 @main() {
mainEntry:
  %FunctionScope_main_a = alloca i32, align 4
  store i32 1, i32* %FunctionScope_main_a, align 4
  %FunctionScope_main_array = alloca [5 x i32], align 4
  %GEP_ = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 0
  store i32 1, i32* %GEP_, align 4
  %GEP_1 = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 1
  store i32 2, i32* %GEP_1, align 4
  %GEP_2 = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 2
  store i32 3, i32* %GEP_2, align 4
  %GEP_3 = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 3
  store i32 0, i32* %GEP_3, align 4
  %GEP_4 = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 4
  store i32 0, i32* %GEP_4, align 4
  %0 = load i32, i32* %FunctionScope_main_a, align 4
  %array_pointer = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 3
  store i32 %0, i32* %array_pointer, align 4
  %1 = load i32, i32* %FunctionScope_main_a, align 4
  %temp = add i32 %1, 5
  %array_pointer5 = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 4
  store i32 %temp, i32* %array_pointer5, align 4
  call void @g()
  %2 = load i32, i32* %FunctionScope_main_a, align 4
  %3 = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 4
  %4 = load i32, i32* %3, align 4
  %temp6 = mul i32 %2, %4
  %5 = call i32 @f(i32 %temp6)
  %6 = load i32, i32* %FunctionScope_main_a, align 4
  %7 = getelementptr [5 x i32], [5 x i32]* %FunctionScope_main_array, i32 0, i32 4
  %8 = load i32, i32* %7, align 4
  %temp7 = mul i32 %6, %8
  %9 = call i32 @f(i32 %temp7)
  ret i32 %9
}
